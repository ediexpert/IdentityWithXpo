@{
    var grid = Html.DevExpress().GridView<IdentityWithXpoLatest.ViewModels.UserViewModel>(settings =>
    {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "User", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "User", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "User", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "User", Action = "GridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Email";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(m => m.UserName);
        settings.Columns.Add(m => m.Email);
        //settings.Columns.Add(m => m.Roles, c => {
        //    c.Caption = "Role List";
        //    c.ColumnType = MVCxGridViewColumnType.TextBox;
        //    c.SetDataItemTemplateContent(content =>
        //    {
        //        string selectedRoles = (string)DataBinder.Eval(content.DataItem, "Email");
        //        //string userId = (string)DataBinder.Eval(content.DataItem, "Email");

        //        Html.DevExpress().TokenBox(tbSettings =>
        //        {
        //            tbSettings.Name = "RoleNames" + selectedRoles;
        //            tbSettings.Properties.ItemValueType = typeof(string);
        //            tbSettings.Properties.DataSource = ViewData["roles"];
        //            //foreach (IdentityWithXpoLatest.ViewModels.RoleViewModel item in ViewData["roles"] as List<IdentityWithXpoLatest.ViewModels.RoleViewModel>)
        //            //{
        //            //    tbSettings.Properties.Items.Add(item.Name).Selected = selectedRoles.Contains(item.Name);
        //            //}
        //            //tbSettings.Properties.TextField = "Name";
        //            //tbSettings.Properties.ValueField = "Id";
        //        }).BindList(ViewData["roles"]).Render();
        //    });
        //});

        settings.Columns.Add(c =>
        {
            c.FieldName = "RoleName";
            c.EditorProperties().TokenBox(tb => {
                tb.BindList(ViewData["roles"]);
                tb.ValueField = "Name";
                tb.TextField = "Name";
                string selectedRoles = "admin";
                foreach (var item in ViewData["roles"] as List<IdentityWithXpoLatest.ViewModels.RoleViewModel>)
                {
                    tb.Items.Add(item.Name).Selected = selectedRoles.Contains(item.Name);
                }
            });
            //c.EditorProperties().ComboBox(p =>
            //{
            //    //p.DataMember = "Roles";
            //    p.TextField = "Name";
            //    p.ValueField = "Name";
            //    p.ValueType = typeof(string);
            //    p.BindList(ViewData["roles"]);
            //});
        });
        //settings.Columns.Add(c =>
        //{
        //    c.FieldName = "Roles";
        //    c.Caption = "Roles";            
        //    c.UnboundType = DevExpress.Data.UnboundColumnType.Object;
        //    c.EditorProperties().ComboBox(p =>
        //    {
        //        p.TextField = "Name";
        //        p.ValueField = "Name";
        //        p.ValueType = typeof(string);
        //        p.BindList(ViewData["roles"]);
        //    });
        //});
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()